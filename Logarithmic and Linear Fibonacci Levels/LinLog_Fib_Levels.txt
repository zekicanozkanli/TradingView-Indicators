// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0.
// © zekicanozkanli

//@version=5
indicator("Logarithmic and Linear Fibonacci Levels", shorttitle="Lin/Log Fib Levels", overlay=true)

tab_coordinates = "Coordinates"

adjustPricePrecision(price) =>
    precision = math.round(math.log(1 / syminfo.mintick) / math.log(10))
    math.round(price, precision)

startPrice = adjustPricePrecision(input.price(defval=1, title="Level 1", confirm=true, group=tab_coordinates, inline="Level 1", display=display.none))
endPrice = adjustPricePrecision(input.price(defval=0, title="Level 0", confirm=true, group=tab_coordinates, inline="Level 0", display=display.none))
startTime = input.time(timestamp("2023-01-01 00:00"), title="", confirm=true, group=tab_coordinates, inline="Level 1")
endTime = input.time(timestamp("2023-01-02 00:00"), title="", confirm=true, group=tab_coordinates, inline="Level 0")

tab_style = "Style"

extendLeft = input(false, "Extend Left     ^__________^     Extend Right", inline = "Extend Lines", group=tab_style)
extendRight = input(false, "", inline = "Extend Lines", group=tab_style)

showLinear = input.bool(true, title="Linear", group=tab_style, inline="Linear")
oneColorLinear = input.color(#444444, title="", group=tab_style, inline="Linear")
linearStyle = input.string("Solid", "", options=["Solid", "Dashed", "Dotted"], group=tab_style, inline="Linear", display=display.none)

showLogarithmic = input.bool(true, title="Logarithmic", group=tab_style, inline="Logarithmic")
oneColorLogarithmic = input.color(#2b2100, title="", group=tab_style, inline="Logarithmic")
logarithmicStyle = input.string("Dashed", "", options=["Solid", "Dashed", "Dotted"], group=tab_style, inline="Logarithmic", display=display.none)

useGlobalColor = input.bool(false, title="Global Color", group=tab_style, inline="Colors")

showTrendLine = input.bool(true, title="Show Trend Line", group=tab_style, inline="Trend Line")
trendLineStyle = input.string("Dashed", "", options=["Solid", "Dashed", "Dotted"], group=tab_style, inline="Trend Line", display=display.none)
trendLineColor = input.color(color.new(#787b86, 85), title="", group=tab_style, inline="Trend Line")

labelFontSize = input.string("Normal", title="Labels", options=["Tiny", "Small", "Normal", "Large", "Huge"], group=tab_style, inline="Labels", display=display.none)
labelPosition = input.string("Right", title="", options=["Left", "Center", "Right"], group=tab_style, inline="Labels", display=display.none)
showFibLevel = input.bool(true, title="Show Fib Level", group=tab_style)
showPrice = input.bool(true, title="Show Price", group=tab_style)

tab_reverse = ""

reverseFib = input.bool(false, title="Reverse", group=tab_reverse)

tab_levels = "Levels"

// Create 16 Fibonacci levels
fibValues = array.new_float(16, na)
fibColors = array.new_color(16, na)
fibShow = array.new_bool(16, true)

array.set(fibShow, 0, input.bool(true, title="", group=tab_levels, inline="L1"))
array.set(fibValues, 0, input.float(1.0, title="", step=1, group=tab_levels, inline="L1"))
array.set(fibColors, 0, input.color(color.black, title="", group=tab_levels, inline="L1"))

array.set(fibShow, 1, input.bool(true, title="", group=tab_levels, inline="L2"))
array.set(fibValues, 1, input.float(0.786, title="", step=1, group=tab_levels, inline="L2"))
array.set(fibColors, 1, input.color(color.silver, title="", group=tab_levels, inline="L2"))

array.set(fibShow, 2, input.bool(true, title="", group=tab_levels, inline="L3"))
array.set(fibValues, 2, input.float(0.618, title="", step=1, group=tab_levels, inline="L3"))
array.set(fibColors, 2, input.color(#3d9b59, title="", group=tab_levels, inline="L3"))

array.set(fibShow, 3, input.bool(true, title="", group=tab_levels, inline="L4"))
array.set(fibValues, 3, input.float(0.5, title="", step=1, group=tab_levels, inline="L4"))
array.set(fibColors, 3, input.color(#297799, title="", group=tab_levels, inline="L4"))

array.set(fibShow, 4, input.bool(true, title="", group=tab_levels, inline="L5"))
array.set(fibValues, 4, input.float(0.382, title="", step=1, group=tab_levels, inline="L5"))
array.set(fibColors, 4, input.color(#e66140, title="", group=tab_levels, inline="L5"))

array.set(fibShow, 5, input.bool(true, title="", group=tab_levels, inline="L6"))
array.set(fibValues, 5, input.float(0.236, title="", step=1, group=tab_levels, inline="L6"))
array.set(fibColors, 5, input.color(color.silver, title="", group=tab_levels, inline="L6"))

array.set(fibShow, 6, input.bool(true, title="", group=tab_levels, inline="L7"))
array.set(fibValues, 6, input.float(0, title="", step=1, group=tab_levels, inline="L7"))
array.set(fibColors, 6, input.color(color.black, title="", group=tab_levels, inline="L7"))

array.set(fibShow, 7, input.bool(false, title="", group=tab_levels, inline="L8"))
array.set(fibValues, 7, input.float(1.272, title="", step=1, group=tab_levels, inline="L8"))
array.set(fibColors, 7, input.color(#bd4172, title="", group=tab_levels, inline="L8"))

array.set(fibShow, 8, input.bool(false, title="", group=tab_levels, inline="L1"))
array.set(fibValues, 8, input.float(1.414, title="", step=1, group=tab_levels, inline="L1"))
array.set(fibColors, 8, input.color(#b6337b, title="", group=tab_levels, inline="L1"))

array.set(fibShow, 9, input.bool(false, title="", group=tab_levels, inline="L2"))
array.set(fibValues, 9, input.float(1.618, title="", step=1, group=tab_levels, inline="L2"))
array.set(fibColors, 9, input.color(#a50341, title="", group=tab_levels, inline="L2"))

array.set(fibShow, 10, input.bool(false, title="", group=tab_levels, inline="L3"))
array.set(fibValues, 10, input.float(0.79, title="", step=1, group=tab_levels, inline="L3"))
array.set(fibColors, 10, input.color(#68530d, title="", group=tab_levels, inline="L3"))

array.set(fibShow, 11, input.bool(false, title="", group=tab_levels, inline="L4"))
array.set(fibValues, 11, input.float(0.705, title="", step=1, group=tab_levels, inline="L4"))
array.set(fibColors, 11, input.color(#62663a, title="", group=tab_levels, inline="L4"))

array.set(fibShow, 12, input.bool(false, title="", group=tab_levels, inline="L5"))
array.set(fibValues, 12, input.float(0.66, title="", step=1, group=tab_levels, inline="L5"))
array.set(fibColors, 12, input.color(#297c42, title="", group=tab_levels, inline="L5"))

array.set(fibShow, 13, input.bool(false, title="", group=tab_levels, inline="L6"))
array.set(fibValues, 13, input.float(0.34, title="", step=1, group=tab_levels, inline="L6"))
array.set(fibColors, 13, input.color(#c94e39, title="", group=tab_levels, inline="L6"))

array.set(fibShow, 14, input.bool(false, title="", group=tab_levels, inline="L7"))
array.set(fibValues, 14, input.float(0.21, title="", step=1, group=tab_levels, inline="L7"))
array.set(fibColors, 14, input.color(#68530d, title="", group=tab_levels, inline="L7"))

array.set(fibShow, 15, input.bool(false, title="", group=tab_levels, inline="L8"))
array.set(fibValues, 15, input.float(-0.618, title="", step=1, group=tab_levels, inline="L8"))
array.set(fibColors, 15, input.color(#a50341, title="", group=tab_levels, inline="L8"))

getLineStyle(style) =>
    switch style
        "Solid" => line.style_solid
        "Dashed" => line.style_dashed
        "Dotted" => line.style_dotted

linearLineStyle = getLineStyle(linearStyle)
logarithmicLineStyle = getLineStyle(logarithmicStyle)
trendLineStyleValue = getLineStyle(trendLineStyle)

fontSize = switch labelFontSize
    "Tiny" => size.tiny
    "Small" => size.small
    "Normal" => size.normal
    "Large" => size.large
    "Huge" => size.huge

extendMode = extend.none
if extendLeft and extendRight
    extendMode := extend.both
else if extendLeft
    extendMode := extend.left
else if extendRight
    extendMode := extend.right

formatPrice(price) =>
    str.tostring(price, format.mintick)

startIdx = ta.valuewhen(time == startTime, bar_index, 0)
endIdx = ta.valuewhen(time == endTime, bar_index, 0)
centerIdx = math.round((startIdx + endIdx) / 2)

var float[] levelPrices = array.new_float(16, na)
var float[] levelPricesLog = array.new_float(16, na)

var color[] lineColors = array.new_color(16, na)
var color[] lineColorsLog = array.new_color(16, na)

if (not na(startPrice) and not na(endPrice))
    var float fib0 = na
    var float fib1 = na

    if reverseFib
        fib0 := startPrice
        fib1 := endPrice
    else
        fib1 := startPrice
        fib0 := endPrice

    var float fib0Log = na
    var float fib1Log = na
    
    if showLogarithmic
        fib0Log := fib0
        fib1Log := fib1
    
    if not na(fib0) and not na(fib1)
        for i = 0 to 15
            value = array.get(fibValues, i)
            color = array.get(fibColors, i)
            show = array.get(fibShow, i)
            if show
                levelPrice = fib0 + (fib1 - fib0) * value
                lineColor = useGlobalColor ? oneColorLinear : color
                array.set(levelPrices, i, levelPrice)
                array.set(lineColors, i, lineColor)
                if showLinear and value != 0 and value != 1
                    line.new(x1=startIdx, y1=levelPrice, x2=endIdx, y2=levelPrice, color=lineColor, width=1, style=linearLineStyle, extend=extendMode)
                    if not extendRight or labelPosition != "Right"
                        labelText = (showFibLevel ? str.tostring(value) : "") + (showPrice ? " (" + formatPrice(levelPrice) + ")" : "")
                        labelPositionX = labelPosition == "Right" and not extendRight ? endIdx : (labelPosition == "Left" ? startIdx : centerIdx)
                        label.new(x=labelPositionX, y=levelPrice, text=labelText, textcolor=lineColor, style=label.style_none, size=fontSize, textalign=text.align_right)
                if showLogarithmic and value != 0 and value != 1
                    levelPriceLog = math.exp(math.log(fib0Log) + (math.log(fib1Log) - math.log(fib0Log)) * value)
                    lineColorLog = useGlobalColor ? oneColorLogarithmic : color
                    array.set(levelPricesLog, i, levelPriceLog)
                    array.set(lineColorsLog, i, lineColorLog)
                    if not extendRight or labelPosition != "Right"
                        labelTextLog = (showFibLevel ? "Log " + str.tostring(value) : "") + (showPrice ? " (" + formatPrice(levelPriceLog) + ")" : "")
                        labelPositionXLog = labelPosition == "Right" and not extendRight ? endIdx : (labelPosition == "Left" ? startIdx : centerIdx)
                        label.new(x=labelPositionXLog, y=levelPriceLog, text=labelTextLog, textcolor=lineColorLog, style=label.style_none, size=fontSize, textalign=text.align_right)
                    line.new(x1=startIdx, y1=levelPriceLog, x2=endIdx, y2=levelPriceLog, color=lineColorLog, width=1, style=logarithmicLineStyle, extend=extendMode)
                if (showLinear or showLogarithmic) and (value == 1 or value == 0)
                    line.new(x1=startIdx, y1=levelPrice, x2=endIdx, y2=levelPrice, color=lineColor, width=1, style=linearLineStyle, extend=extendMode)
                    if not extendRight or labelPosition != "Right"
                        labelText = (showFibLevel ? str.tostring(value) : "") + (showPrice ? " (" + formatPrice(levelPrice) + ")" : "")
                        labelPositionX = labelPosition == "Right" and not extendRight ? endIdx : (labelPosition == "Left" ? startIdx : centerIdx)
                        label.new(x=labelPositionX, y=levelPrice, text=labelText, textcolor=lineColor, style=label.style_none, size=fontSize, textalign=text.align_right)
        if showTrendLine
            line.new(x1=startIdx, y1=startPrice, x2=endIdx, y2=endPrice, color=trendLineColor, width=1, style=trendLineStyleValue, extend=extend.none)

// Plot levels to price scale if extendRight is enabled
plot(showLinear and array.get(fibShow, 0) and extendRight ? array.get(levelPrices, 0) : na, title="Fib Level 1", color=color.new(array.get(lineColors, 0), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 1) and extendRight ? array.get(levelPrices, 1) : na, title="Fib Level 2", color=color.new(array.get(lineColors, 1), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 2) and extendRight ? array.get(levelPrices, 2) : na, title="Fib Level 3", color=color.new(array.get(lineColors, 2), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 3) and extendRight ? array.get(levelPrices, 3) : na, title="Fib Level 4", color=color.new(array.get(lineColors, 3), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 4) and extendRight ? array.get(levelPrices, 4) : na, title="Fib Level 5", color=color.new(array.get(lineColors, 4), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 5) and extendRight ? array.get(levelPrices, 5) : na, title="Fib Level 6", color=color.new(array.get(lineColors, 5), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 6) and extendRight ? array.get(levelPrices, 6) : na, title="Fib Level 7", color=color.new(array.get(lineColors, 6), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 7) and extendRight ? array.get(levelPrices, 7) : na, title="Fib Level 8", color=color.new(array.get(lineColors, 7), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 8) and extendRight ? array.get(levelPrices, 8) : na, title="Fib Level 9", color=color.new(array.get(lineColors, 8), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 9) and extendRight ? array.get(levelPrices, 9) : na, title="Fib Level 10", color=color.new(array.get(lineColors, 9), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 10) and extendRight ? array.get(levelPrices, 10) : na, title="Fib Level 11", color=color.new(array.get(lineColors, 10), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 11) and extendRight ? array.get(levelPrices, 11) : na, title="Fib Level 12", color=color.new(array.get(lineColors, 11), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 12) and extendRight ? array.get(levelPrices, 12) : na, title="Fib Level 13", color=color.new(array.get(lineColors, 12), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 13) and extendRight ? array.get(levelPrices, 13) : na, title="Fib Level 14", color=color.new(array.get(lineColors, 13), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 14) and extendRight ? array.get(levelPrices, 14) : na, title="Fib Level 15", color=color.new(array.get(lineColors, 14), 100), linewidth=1, style=plot.style_linebr)
plot(showLinear and array.get(fibShow, 15) and extendRight ? array.get(levelPrices, 15) : na, title="Fib Level 16", color=color.new(array.get(lineColors, 15), 100), linewidth=1, style=plot.style_linebr)

plot(showLogarithmic and array.get(fibShow, 0) and extendRight ? array.get(levelPricesLog, 0) : na, title="Fib Level Log 1", color=color.new(array.get(lineColorsLog, 0), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 1) and extendRight ? array.get(levelPricesLog, 1) : na, title="Fib Level Log 2", color=color.new(array.get(lineColorsLog, 1), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 2) and extendRight ? array.get(levelPricesLog, 2) : na, title="Fib Level Log 3", color=color.new(array.get(lineColorsLog, 2), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 3) and extendRight ? array.get(levelPricesLog, 3) : na, title="Fib Level Log 4", color=color.new(array.get(lineColorsLog, 3), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 4) and extendRight ? array.get(levelPricesLog, 4) : na, title="Fib Level Log 5", color=color.new(array.get(lineColorsLog, 4), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 5) and extendRight ? array.get(levelPricesLog, 5) : na, title="Fib Level Log 6", color=color.new(array.get(lineColorsLog, 5), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 6) and extendRight ? array.get(levelPricesLog, 6) : na, title="Fib Level Log 7", color=color.new(array.get(lineColorsLog, 6), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 7) and extendRight ? array.get(levelPricesLog, 7) : na, title="Fib Level Log 8", color=color.new(array.get(lineColorsLog, 7), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 8) and extendRight ? array.get(levelPricesLog, 8) : na, title="Fib Level Log 9", color=color.new(array.get(lineColorsLog, 8), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 9) and extendRight ? array.get(levelPricesLog, 9) : na, title="Fib Level Log 10", color=color.new(array.get(lineColorsLog, 9), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 10) and extendRight ? array.get(levelPricesLog, 10) : na, title="Fib Level Log 11", color=color.new(array.get(lineColorsLog, 10), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 11) and extendRight ? array.get(levelPricesLog, 11) : na, title="Fib Level Log 12", color=color.new(array.get(lineColorsLog, 11), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 12) and extendRight ? array.get(levelPricesLog, 12) : na, title="Fib Level Log 13", color=color.new(array.get(lineColorsLog, 12), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 13) and extendRight ? array.get(levelPricesLog, 13) : na, title="Fib Level Log 14", color=color.new(array.get(lineColorsLog, 13), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 14) and extendRight ? array.get(levelPricesLog, 14) : na, title="Fib Level Log 15", color=color.new(array.get(lineColorsLog, 14), 100), linewidth=1, style=plot.style_linebr)
plot(showLogarithmic and array.get(fibShow, 15) and extendRight ? array.get(levelPricesLog, 15) : na, title="Fib Level Log 16", color=color.new(array.get(lineColorsLog, 15), 100), linewidth=1, style=plot.style_linebr)
